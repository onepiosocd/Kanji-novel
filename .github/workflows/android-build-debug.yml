name: Android Debug Build (Capacitor)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18
      JAVA_VERSION: 17

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Install dependencies (auto-detect lockfile)
        shell: bash
        run: |
          set -euo pipefail
          echo "Working dir: repo root"
          ls -la

          # 如果有 lockfile 使用 npm ci，否则用 npm install
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "Using npm ci"
            npm ci
          else
            echo "No lockfile - using npm install"
            npm install
          fi

      - name: Build web (vite)
        shell: bash
        run: |
          set -euo pipefail
          echo "Running npm run build"
          npm run build

      - name: Install Capacitor CLI and Android platform package
        shell: bash
        run: |
          # ---- 修改点：同时安装 @capacitor/cli 与 @capacitor/android ----
          npm install @capacitor/cli @capacitor/android --no-save --no-audit --no-fund
          echo "Installed Capacitor packages:"
          npx cap --version || true

      - name: Setup Android SDK (provide sdkmanager via action)
        uses: android-actions/setup-android@v3
        with:
          # 可选：指定 cmdline-tools 版本；'latest' 或具体号都行
          cmdline-tools-version: 'latest'

      - name: Install Android SDK components (platforms & build-tools)
        shell: bash
        run: |
          set -euo pipefail
          echo "Check sdkmanager path & list"
          which sdkmanager || { echo "sdkmanager not found"; exit 1; }
          sdkmanager --list || true

          echo "Installing platform-tools, platforms;android-33 and build-tools;33.0.0"
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

          echo "Accepting licenses (ignore broken pipe if it occurs)"
          # 有时 yes 会产生 broken pipe；使用 || true 吞掉非零退出码，防止步骤失败
          yes | sdkmanager --licenses >/dev/null 2>&1 || true

      - name: Capacitor init (if needed) and add android
        shell: bash
        run: |
          set -euo pipefail
          APP_ID=com.example.mykanjiapp
          APP_NAME="MyKanjiApp"
          # 如果已 init 或已 add android，这些命令不会失败（我们用 || true）
          npx cap init "$APP_NAME" "$APP_ID" --web-dir=dist || true
          npx cap add android || true
          npx cap sync android

      - name: Ensure gradlew is executable
        shell: bash
        run: |
          if [ -f android/gradlew ]; then
            chmod +x android/gradlew
          else
            echo "Warning: android/gradlew not found"
          fi

      - name: Build Android debug APK
        working-directory: android
        shell: bash
        run: |
          set -euo pipefail
          ./gradlew assembleDebug --no-daemon -Porg.gradle.jvmargs="-Xmx2048m"

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk
