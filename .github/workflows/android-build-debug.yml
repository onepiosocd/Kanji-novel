name: Android Debug Build (Capacitor) + extract SVGs

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18
      JAVA_VERSION: 17

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

      - name: Install dependencies (auto-detect lockfile)
        shell: bash
        run: |
          set -euo pipefail
          echo "Working dir: repo root"
          ls -la
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            echo "Using npm ci"
            npm ci
          else
            echo "No lockfile - using npm install"
            npm install
          fi

      - name: Debug: list repo & show zip contents (top)
        shell: bash
        run: |
          echo "*** repo root listing ***"
          ls -la
          echo ">>> show public (if exists)"
          ls -la public || true
          echo ">>> list root zip if exists"
          if [ -f kanjivg-20250422-all.zip ]; then
            echo "Found kanjivg zip, listing top entries:"
            unzip -l kanjivg-20250422-all.zip | head -n 40 || true
          else
            echo "No kanjivg zip found at repo root."
          fi

      - name: Extract up to 200 SVGs from zip into public/svgs (safe)
        shell: bash
        if: always()
        run: |
          set -euo pipefail
          if [ -f kanjivg-20250422-all.zip ]; then
            mkdir -p public/svgs
            echo "Listing all .svg entries in zip and extracting first 200..."
            # get svg file list inside zip, extract first 200 safely
            unzip -l kanjivg-20250422-all.zip | awk '{print $4}' | grep -i '\.svg$' | head -n 200 > /tmp/svg_list.txt || true
            if [ -s /tmp/svg_list.txt ]; then
              while IFS= read -r f; do
                echo "Extracting: $f"
                unzip -j -o kanjivg-20250422-all.zip "$f" -d public/svgs || true
              done < /tmp/svg_list.txt
              echo "Extracted (top) files:"
              ls -la public/svgs | head -n 50
            else
              echo "No svg entries found in zip (or different internal structure)."
            fi
          else
            echo "kanjivg zip not present; skipping extract."
          fi

      - name: Build web (vite)
        shell: bash
        run: |
          set -euo pipefail
          echo "Running npm run build"
          npm run build
          echo "After build: show dist listing"
          ls -la dist || true
          ls -la dist/svgs || true

      - name: Install Capacitor CLI and Android platform package (Capacitor v5)
        shell: bash
        run: |
          npm install @capacitor/cli@5 @capacitor/android@5 --no-save --no-audit --no-fund
          npx cap --version || true

      - name: Setup Android SDK (provide sdkmanager via action)
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'

      - name: Install Android SDK components (platforms & build-tools)
        shell: bash
        run: |
          set -euo pipefail
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"
          yes | sdkmanager --licenses >/dev/null 2>&1 || true

      - name: Capacitor init (if needed) and add android
        shell: bash
        run: |
          set -euo pipefail
          APP_ID=com.example.mykanjiapp
          APP_NAME="MyKanjiApp"
          npx cap init "$APP_NAME" "$APP_ID" --web-dir=dist || true
          npx cap add android || true
          npx cap sync android

      - name: Ensure gradlew is executable
        shell: bash
        run: |
          if [ -f android/gradlew ]; then
            chmod +x android/gradlew
          else
            echo "Warning: android/gradlew not found"
          fi

      - name: Build Android debug APK
        working-directory: android
        shell: bash
        run: |
          set -euo pipefail
          ./gradlew assembleDebug --no-daemon -Porg.gradle.jvmargs="-Xmx2048m"

      - name: Upload debug APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: android/app/build/outputs/apk/debug/*.apk

      - name: Upload dist artifact for inspection
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist
